"""update models

Revision ID: d3c8b8e8974a
Revises: ac53f181dd91
Create Date: 2025-07-09 10:20:05.798900

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d3c8b8e8974a"
down_revision: Union[str, None] = "ac53f181dd91"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "basketdevices", "device_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "basketdevices", "basket_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column("baskets", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("brands", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("deviceinfos", "title", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "deviceinfos", "description", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "deviceinfos", "device_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column("devices", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "devices",
        "price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        type_=sa.Integer(),
        nullable=False,
    )
    op.alter_column(
        "devices",
        "rating",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column("devices", "type_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("devices", "brand_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("ratings", "rate", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("ratings", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("ratings", "device_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("types", "name", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("types", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("ratings", "device_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("ratings", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("ratings", "rate", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("devices", "brand_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("devices", "type_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "devices",
        "rating",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "devices",
        "price",
        existing_type=sa.Integer(),
        type_=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column("devices", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "deviceinfos", "device_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "deviceinfos", "description", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("deviceinfos", "title", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("brands", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("baskets", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "basketdevices", "basket_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "basketdevices", "device_id", existing_type=sa.INTEGER(), nullable=True
    )
    # ### end Alembic commands ###
